@model SinhVien.ViewModels.createDiem

@{
    ViewData["Title"] = "create";
}

<h2>create</h2>

<h4>KetQua</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @Html.LabelFor(m => m.ketQua.MaKQ, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(m => m.ketQua.MaKQ, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.ketQua.MaKQ, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ketQua.MaMon, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(m => m.ketQua.MaMon, new SelectList(Model.monHoc, "MaMon", "TenMmon"), "chọn môn", new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ketQua.Diem, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(m => m.ketQua.Diem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.ketQua.Diem, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ketQua.MaSV, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(m => m.ketQua.MaSV, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(m => m.ketQua.MaSV, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

